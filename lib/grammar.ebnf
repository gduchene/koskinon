Expr         = ExprUnary | ExprBinary .
ExprBinary   = Expr OpBinary Expr .
ExprHeader   = ( "header" | "headers" ) ( Str | ListStr ) OpCmp ( Str | ListStr ) .
ExprMessage  = "message" OpCmp ( Str | ListStr ) .
ExprUnary    = ExprHeader | ExprMessage | "(" Expr ")" | "not" Expr .
ListStr      = "[" Str [ { "," Str } ] "]" .
OpBinary     = "and" | "or" .
OpCmp        = OpCmpContain | OpCmpEqual | OpCmpMatch .
OpCmpContain = "contain" | "contains" .
OpCmpEqual   = "are" | "is" .
OpCmpMatch   = "match" | "matches" .
Stmt         = StmtLabel | StmtIf | StmtMark | StmtSkip .
StmtBlock    = "{" { Stmt } [ StmtStop ] "}" .
StmtIf       = "if" Expr StmtBlock [ "else" ( StmtIf | StmtBlock ) ] .
StmtLabel    = "label" ( Str | ListStr ) .
StmtMark     = "mark" "as" "read" .
StmtSkip     = "skip" "inbox" .
StmtStop     = "stop" .
Str          = /* https://golang.org/ref/spec#String_literals. */ .
